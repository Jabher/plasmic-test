// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: w63X2LqEPLNaKe4vMByZM4

import * as React from "react";
import { hasVariant, ensureGlobalVariants } from "@plasmicapp/react-web";
import { ThemeProvider } from "lido-plasmic/plasmic-provider/components"; // plasmic-import: ehgcCPxh5-/codeComponent
import { ReefKnotProvider } from "lido-plasmic/plasmic-provider/components"; // plasmic-import: wFzKexUD_xN/codeComponent
import { AntdConfigProvider } from "@plasmicpkgs/antd5/skinny/registerConfigProvider"; // plasmic-import: DmrLLHGTjGTE/codeComponent

export interface GlobalContextsProviderProps {
  children?: React.ReactElement;
  themeProviderProps?: Partial<
    Omit<React.ComponentProps<typeof ThemeProvider>, "children">
  >;

  reefKnotProviderProps?: Partial<
    Omit<React.ComponentProps<typeof ReefKnotProvider>, "children">
  >;

  antdConfigProviderProps?: Partial<
    Omit<React.ComponentProps<typeof AntdConfigProvider>, "children">
  >;
}

export default function GlobalContextsProvider(
  props: GlobalContextsProviderProps
) {
  const {
    children,
    themeProviderProps,
    reefKnotProviderProps,
    antdConfigProviderProps,
  } = props;

  return (
    <ThemeProvider
      {...themeProviderProps}
      useSystemTheme={
        themeProviderProps && "useSystemTheme" in themeProviderProps
          ? themeProviderProps.useSystemTheme!
          : true
      }
    >
      <ReefKnotProvider
        {...reefKnotProviderProps}
        network={
          reefKnotProviderProps && "network" in reefKnotProviderProps
            ? reefKnotProviderProps.network!
            : ("goerli" as const)
        }
      >
        <AntdConfigProvider
          {...antdConfigProviderProps}
          borderRadius={
            antdConfigProviderProps && "borderRadius" in antdConfigProviderProps
              ? antdConfigProviderProps.borderRadius!
              : (6 as const)
          }
          colorBgBase={
            antdConfigProviderProps && "colorBgBase" in antdConfigProviderProps
              ? antdConfigProviderProps.colorBgBase!
              : ("#ffffff" as const)
          }
          colorError={
            antdConfigProviderProps && "colorError" in antdConfigProviderProps
              ? antdConfigProviderProps.colorError!
              : ("#ff4d4f" as const)
          }
          colorInfo={
            antdConfigProviderProps && "colorInfo" in antdConfigProviderProps
              ? antdConfigProviderProps.colorInfo!
              : ("#1677ff" as const)
          }
          colorPrimary={
            antdConfigProviderProps && "colorPrimary" in antdConfigProviderProps
              ? antdConfigProviderProps.colorPrimary!
              : ("#1677ff" as const)
          }
          colorSuccess={
            antdConfigProviderProps && "colorSuccess" in antdConfigProviderProps
              ? antdConfigProviderProps.colorSuccess!
              : ("#52c41a" as const)
          }
          colorWarning={
            antdConfigProviderProps && "colorWarning" in antdConfigProviderProps
              ? antdConfigProviderProps.colorWarning!
              : ("#faad14" as const)
          }
          controlHeight={
            antdConfigProviderProps &&
            "controlHeight" in antdConfigProviderProps
              ? antdConfigProviderProps.controlHeight!
              : (32 as const)
          }
          defaultDark={
            antdConfigProviderProps && "defaultDark" in antdConfigProviderProps
              ? antdConfigProviderProps.defaultDark!
              : false
          }
          lineWidth={
            antdConfigProviderProps && "lineWidth" in antdConfigProviderProps
              ? antdConfigProviderProps.lineWidth!
              : (1 as const)
          }
          sizeStep={
            antdConfigProviderProps && "sizeStep" in antdConfigProviderProps
              ? antdConfigProviderProps.sizeStep!
              : (4 as const)
          }
          sizeUnit={
            antdConfigProviderProps && "sizeUnit" in antdConfigProviderProps
              ? antdConfigProviderProps.sizeUnit!
              : (4 as const)
          }
          themeStyles={
            antdConfigProviderProps && "themeStyles" in antdConfigProviderProps
              ? antdConfigProviderProps.themeStyles!
              : true
              ? {
                  fontFamily: "Manrope",
                  fontSize: "16px",
                  fontWeight: "400",
                  lineHeight: "1.5",
                  color: "#535353",
                  letterSpacing: "normal",
                }
              : undefined
          }
          wireframe={
            antdConfigProviderProps && "wireframe" in antdConfigProviderProps
              ? antdConfigProviderProps.wireframe!
              : false
          }
        >
          {children}
        </AntdConfigProvider>
      </ReefKnotProvider>
    </ThemeProvider>
  );
}
